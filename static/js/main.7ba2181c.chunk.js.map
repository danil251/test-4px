{"version":3,"sources":["components/ModalWindow/ModalWindow.module.css","components/Card/AddWindow/AddWindow.module.css","components/Card/Card.module.css","components/Card/CardItem/CardItem.module.css","redux/card-reducer.js","components/Card/CardItem/CardItem.jsx","components/Card/AddWindow/AddWindow.jsx","components/Card/Card.jsx","components/ModalWindow/ModalWindow.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","initialState","cards","title","idCards","cardItem","id","uuid","text","description","modalProperty","idCard","CardItem","props","dispatch","useDispatch","useSelector","state","card","content","animation","delay","to","onClick","itemText","type","className","s","link","item","draggable","onDragOver","e","preventDefault","target","style","boxShadow","dragOverHandler","onDragLeave","dragLeaveHandler","onDragStart","board","find","b","i","setCurrentBoard","setCurrentItem","dragStartHandler","onDragEnd","dragEndHandler","onDrop","currentIndex","currentBoard","indexOf","currentItem","splice","dropIndex","setBoards","map","dropHandler","AddWindow","useState","inputText","setInputText","window","area","onChange","currentTarget","value","placeholder","buttonWrap","setWindowIsOpen","btnSave","close","btnClose","width","height","viewBox","fill","xmlns","d","Card","c","boards","windowIsOpen","addItem","ModalWindow","propertyModal","changeTitle","setChangeTitle","titleText","setTitleText","descriptionText","setDescriptionText","modal","modalWrap","flex","onDoubleClick","closeModal","svg","changeDescription","saveDescription","App","useEffect","currentBoardAC","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","push","property","car","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ba2181c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalWindow_modal__i_p59\",\"modalWrap\":\"ModalWindow_modalWrap__17Jqj\",\"title\":\"ModalWindow_title__3Ziwu\",\"flex\":\"ModalWindow_flex__MPGNu\",\"changeDescription\":\"ModalWindow_changeDescription__2B_Hg\",\"saveDescription\":\"ModalWindow_saveDescription__4wVyB\",\"svg\":\"ModalWindow_svg__1sCwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"AddWindow_window__1-vyG\",\"area\":\"AddWindow_area__2vnXg\",\"btnSave\":\"AddWindow_btnSave__1CG52\",\"btnClose\":\"AddWindow_btnClose__1A2AR\",\"buttonWrap\":\"AddWindow_buttonWrap__3FxND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2wNFS\",\"title\":\"Card_title__1bgAg\",\"addItem\":\"Card_addItem__35XF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CardItem_link__jHbka\",\"item\":\"CardItem_item__13Nq_\"};","import uuid from \"react-uuid\";\r\n\r\n\r\nlet initialState = {\r\n    cards: [\r\n        {\r\n            title: 'В работе',\r\n            idCards: '1',\r\n            cardItem: [\r\n                {\r\n                    id: uuid(),\r\n                    text: 'Пример текста карточки',\r\n                    description: 'Пример длинного текста карточки,да такого чтобы он вообще не ...'\r\n                },\r\n                {\r\n                    id: uuid(),\r\n                    text: 'Пример',\r\n                    description: 'Пример длинного текста карточки,да такого чтобы он вообще не ...'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: 'На проверке',\r\n            idCards: '2',\r\n            cardItem: [\r\n                {\r\n                    id: uuid(),\r\n                    text: 'Пример текста карточки',\r\n                    description: 'Пример длинного текста карточки,да такого чтобы он вообще не ...'\r\n                },\r\n                {\r\n                    id: uuid(),\r\n                    text: 'П карточки',\r\n                    description: 'Пример длинного текста карточки,да такого чтобы он вообще не ...'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: 'Выполнено',\r\n            idCards: '3',\r\n            cardItem: [\r\n                {\r\n                    id: uuid(),\r\n                    text: 'Пример текста карточки',\r\n                    description: 'Пример длинного текста карточки,да такого чтобы он вообще не ...'\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    modalProperty: {\r\n        title: '',\r\n        description: '',\r\n        id: '',\r\n        idCard: ''\r\n    }\r\n}\r\nexport let cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-CARD-ITEM' : {\r\n            let item = {\r\n                id: uuid(),\r\n                text: action.text,\r\n                description: ''\r\n            }\r\n            state.cards[action.idCards - 1].cardItem.push(item);\r\n            return {...state};\r\n        }\r\n        case 'SET-PROPERTY-MODAL' : {\r\n            let property = {\r\n                title: action.title,\r\n                description: action.description,\r\n                id: action.id,\r\n                idCard: action.idCard\r\n            }\r\n            return {...state, modalProperty: property}\r\n        }\r\n        case 'CHANGE-CARD-ITEM' : {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(car => car.idCards === action.idCard ? {\r\n                    ...car,\r\n                    cardItem: car.cardItem.map(c => c.id === action.id ? {\r\n                        ...c,\r\n                        text: action.title,\r\n                        description: action.description\r\n                    } : c)\r\n                } : car)\r\n            }\r\n        }\r\n        case 'CURRENT-BOARD' : {\r\n            return {...state, cards: action.cards}\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const addCardItem = (idCards, text) => ({type: 'ADD-CARD-ITEM', idCards, text})\r\nexport const setPropertyModal = (title, description, id, idCard) => ({\r\n    type: 'SET-PROPERTY-MODAL',\r\n    title,\r\n    description,\r\n    id,\r\n    idCard\r\n})\r\nexport const changeCarItem = (title, description, id, idCard) => ({\r\n    type: 'CHANGE-CARD-ITEM',\r\n    title,\r\n    description,\r\n    id,\r\n    idCard\r\n})\r\nexport const currentBoardAC = (cards) => ({type: 'CURRENT-BOARD', cards})\r\n","import React from 'react'\r\nimport s from './CardItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setPropertyModal} from \"../../../redux/card-reducer\";\r\nimport Tippy from '@tippy.js/react';\r\nimport 'tippy.js/dist/tippy.css';\r\n\r\n\r\nfunction CardItem(props) {\r\n    let dispatch = useDispatch()\r\n    let cards = useSelector(state => state.card.cards)\r\n\r\n\r\n    let target = () => {\r\n        dispatch(setPropertyModal(props.itemText, props.description, props.id, props.idCards))\r\n    }\r\n\r\n\r\n    function dragLeaveHandler(e) {\r\n        e.target.style.boxShadow = 'none'\r\n    }\r\n\r\n    function dragStartHandler(e) {\r\n        let board = cards.find(b => b.idCards === props.idCards)\r\n        let item = board.cardItem.find(i => i.id === e.target.id)\r\n        props.setCurrentBoard(board)\r\n        props.setCurrentItem(item)\r\n\r\n    }\r\n\r\n    function dragEndHandler(e) {\r\n        e.target.style.boxShadow = 'none'\r\n    }\r\n\r\n    function dragOverHandler(e) {\r\n        e.preventDefault()\r\n        if (e.target.className === `${s.item}`) {\r\n            e.target.style.boxShadow = '0px 4px 3px gray'\r\n        }\r\n    }\r\n\r\n    function dropHandler(e) {\r\n        e.preventDefault()\r\n        e.target.style.boxShadow = 'none'\r\n        let board = cards.find(b => b.idCards === props.idCards)\r\n        let item = board.cardItem.find(i => i.id === e.target.id)\r\n\r\n        const currentIndex = props.currentBoard.cardItem.indexOf(props.currentItem)\r\n        props.currentBoard.cardItem.splice(currentIndex, 1)\r\n\r\n        const dropIndex = board.cardItem.indexOf(item)\r\n\r\n        board.cardItem.splice(currentIndex <= dropIndex ? dropIndex + 1 : dropIndex, 0, props.currentItem)\r\n\r\n        props.setBoards(cards.map(b => {\r\n            if (b.idCards === board.idCards) {\r\n                return board\r\n            }\r\n            if (b.id === props.currentBoard.id) {\r\n                return props.currentBoard\r\n            }\r\n            return b\r\n        }))\r\n\r\n    }\r\n\r\n    return (\r\n        <div id={props.idCards}>\r\n            <Tippy content={props.description ? props.description : 'No description' } animation=\"scale\"\r\n                   delay={[1000, 0]}\r\n            >\r\n                <NavLink to='/modalWindow' onClick={target} className={s.link}>\r\n                    <div id={props.id}\r\n                         className={s.item}\r\n                         draggable={true}\r\n                         onDragOver={(e) => dragOverHandler(e)}\r\n                         onDragLeave={(e) => dragLeaveHandler(e)}\r\n                         onDragStart={(e) => dragStartHandler(e)}\r\n                         onDragEnd={(e) => dragEndHandler(e)}\r\n                         onDrop={(e) => dropHandler(e)}\r\n                    >{props.itemText}</div>\r\n                </NavLink>\r\n            </Tippy>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardItem","import React, {useState} from 'react'\r\nimport s from './AddWindow.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addCardItem} from \"../../../redux/card-reducer\";\r\n\r\nfunction AddWindow(props) {\r\n    let dispatch = useDispatch()\r\n    let [inputText, setInputText] = useState('')\r\n    let saveText = () => {\r\n        if (inputText) {\r\n            dispatch(addCardItem(props.idCards, inputText))\r\n            setInputText('')\r\n            props.setWindowIsOpen(false)\r\n        } else {\r\n            props.setWindowIsOpen(false)\r\n        }\r\n\r\n    }\r\n    let changeText = (e) => {\r\n        setInputText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.window}>\r\n            <textarea className={s.area} type=\"text\" onChange={changeText} value={inputText} placeholder='Введите текст карточки'/>\r\n            <div className={s.buttonWrap}>\r\n                <button onClick={saveText} className={s.btnSave}>Добавить карточку</button>\r\n                <button onClick={props.close} className={s.btnClose}>\r\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\r\n                            fill=\"#626262\"/>\r\n                    </svg>\r\n                    Отменить\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddWindow","import React, {useState} from 'react'\r\nimport s from './Card.module.css'\r\nimport CardItem from \"./CardItem/CardItem\";\r\nimport AddWindow from \"./AddWindow/AddWindow\";\r\n\r\n\r\nfunction Card(props) {\r\n    let card = props.cardItem.map(c => <CardItem description={c.description}\r\n                                                 itemText={c.text}\r\n                                                 currentBoard={props.currentBoard}\r\n                                                 setCurrentBoard={props.setCurrentBoard}\r\n                                                 currentItem={props.currentItem}\r\n                                                 boards={props.boards}\r\n                                                 setBoards={props.setBoards}\r\n                                                 setCurrentItem={props.setCurrentItem}\r\n                                                 key={c.id} id={c.id}\r\n                                                 idCards={props.idCards}/>)\r\n    let [windowIsOpen, setWindowIsOpen] = useState(false)\r\n    let open = () => {\r\n        setWindowIsOpen(true)\r\n    }\r\n    let close = () => {\r\n        setWindowIsOpen(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.card}\r\n        >\r\n            <div className={s.title}>{props.title}</div>\r\n            {card}\r\n\r\n            {windowIsOpen ? <AddWindow close={close} idCards={props.idCards} setWindowIsOpen={setWindowIsOpen}/> :\r\n                <div className={s.addItem} onClick={open}>\r\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M14 8H8V14H6V8H0V6H6V0H8V6H14V8Z\" fill=\"#626262\"/>\r\n                    </svg>\r\n                    Добавить еще одну карточку\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, {useState} from 'react'\r\nimport s from './ModalWindow.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {changeCarItem} from \"../../redux/card-reducer\";\r\n\r\nfunction ModalWindow(props) {\r\n    let propertyModal = useSelector(state => state.card.modalProperty)\r\n    let [changeTitle, setChangeTitle] = useState(false)\r\n    let [titleText, setTitleText] = useState(propertyModal.title)\r\n    let [descriptionText, setDescriptionText] = useState(propertyModal.description)\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    let openChangeTitle = () => {\r\n        setChangeTitle(true)\r\n    }\r\n    let changeTitleText = (e) => {\r\n        setTitleText(e.currentTarget.value)\r\n    }\r\n    let changeDescriptionText = (e) => {\r\n        setDescriptionText(e.currentTarget.value)\r\n    }\r\n    let changeSave = () => {\r\n        dispatch(changeCarItem(titleText, descriptionText, propertyModal.id, propertyModal.idCard))\r\n    }\r\n    return (\r\n        <div className={s.modal}>\r\n            <div className={s.modalWrap}>\r\n                <div className={s.flex}>\r\n                    {changeTitle ?\r\n                        <textarea type=\"text\" onChange={changeTitleText} value={titleText} className={s.title}/> :\r\n                        <div className={s.title} onDoubleClick={openChangeTitle}>{titleText}</div>}\r\n                    <NavLink to='/' className={s.closeModal}>\r\n                        <svg className={s.svg} width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M14 1.41L12.59 0L7 5.59L1.41 0L0 1.41L5.59 7L0 12.59L1.41 14L7 8.41L12.59 14L14 12.59L8.41 7L14 1.41Z\"\r\n                                fill=\"#626262\"/>\r\n                        </svg>\r\n                    </NavLink>\r\n                </div>\r\n                <textarea type=\"text\" className={s.changeDescription} value={descriptionText}\r\n                          onChange={changeDescriptionText} placeholder='Описание'/>\r\n                <NavLink to='/'>\r\n                    <button className={s.saveDescription} onClick={changeSave}>Сохранить</button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","import './App.css';\nimport Card from \"./components/Card/Card\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Route} from \"react-router-dom\";\nimport ModalWindow from \"./components/ModalWindow/ModalWindow\";\nimport {useState, useEffect} from \"react\";\nimport {currentBoardAC} from \"./redux/card-reducer\";\n\n\nfunction App() {\n    const cards = useSelector(state => state.card)\n    let [currentBoard, setCurrentBoard] = useState(null)\n    let [currentItem, setCurrentItem] = useState(null)\n    let [boards, setBoards] = useState(cards.cards)\n    let dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(currentBoardAC(boards))\n    }, [setBoards])\n\n\n    let card = cards.cards.map(c => <Card title={c.title}\n                                          currentBoard={currentBoard}\n                                          setCurrentBoard={setCurrentBoard}\n                                          currentItem={currentItem}\n                                          setCurrentItem={setCurrentItem}\n                                          boards={boards}\n                                          setBoards={setBoards}\n                                          cardItem={c.cardItem}\n                                          key={c.idCards}\n                                          idCards={c.idCards}\n                                          id={c.idCards}/>)\n\n    return (\n        <div className='app'>\n            {card}\n            <Route path=\"/modalWindow\" render={() => <ModalWindow/>}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux'\r\nimport {cardReducer} from \"./card-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    card: cardReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}